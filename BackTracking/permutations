class Solution {
    static List<List<Integer>> find(int[] nums){
        List<List<Integer>> res=new ArrayList<>();
        boolean[] used=new boolean[nums.length];
        solve(res,used,nums,new ArrayList<>());
        return res;
    }
    static void solve( List<List<Integer>> res, boolean[] used,int[] nums,List<Integer> curr){
        if(curr.size()==nums.length){
            res.add(new ArrayList<>(curr));
            return;
        }
        for(int i=0;i<nums.length;i++){
            if(used[i]) continue;
            used[i]=true;
            curr.add(nums[i]);
            solve(res,used,nums,curr);
            curr.remove(curr.size()-1);
            used[i]=false;
        }
    }
    public List<List<Integer>> permute(int[] nums) {
        
         List<List<Integer>> ans =find(nums);
       
        return ans;
    }
}
